/**
 * Trabble Backend API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { InventoryBookingEvent } from './inventoryBookingEvent';
import { InventoryItem } from './inventoryItem';


export interface InventoryBooking {
    userId?: string;
    note?: string;
    bookingSourceName?: string;
    totalCost?: number;
    currency?: string;
    bookingSource?: InventoryBooking.BookingSourceEnum;
    status?: InventoryBooking.StatusEnum;
    paymentMethod?: InventoryBooking.PaymentMethodEnum;
    inventoryItemId?: string;
    inventoryItem?: InventoryItem;
    events?: Array<InventoryBookingEvent>;
    id?: string;
    createdTime?: Date;
    updatedTime?: Date;
}
export namespace InventoryBooking {
    export type BookingSourceEnum = 'OTA' | 'DirectWebsite' | 'Chatbot' | 'Referral' | 'Walkin' | 'Manual' | 'Other';
    export const BookingSourceEnum = {
        OTA: 'OTA' as BookingSourceEnum,
        DirectWebsite: 'DirectWebsite' as BookingSourceEnum,
        Chatbot: 'Chatbot' as BookingSourceEnum,
        Referral: 'Referral' as BookingSourceEnum,
        Walkin: 'Walkin' as BookingSourceEnum,
        Manual: 'Manual' as BookingSourceEnum,
        Other: 'Other' as BookingSourceEnum
    }
    export type StatusEnum = 'AwaitingPayment' | 'PaymentComplete' | 'Cancelled' | 'Refunded';
    export const StatusEnum = {
        AwaitingPayment: 'AwaitingPayment' as StatusEnum,
        PaymentComplete: 'PaymentComplete' as StatusEnum,
        Cancelled: 'Cancelled' as StatusEnum,
        Refunded: 'Refunded' as StatusEnum
    }
    export type PaymentMethodEnum = 'Cash' | 'Paypal' | 'LoyaltyPoints' | 'CreditCard' | 'DebitCard' | 'Combination';
    export const PaymentMethodEnum = {
        Cash: 'Cash' as PaymentMethodEnum,
        Paypal: 'Paypal' as PaymentMethodEnum,
        LoyaltyPoints: 'LoyaltyPoints' as PaymentMethodEnum,
        CreditCard: 'CreditCard' as PaymentMethodEnum,
        DebitCard: 'DebitCard' as PaymentMethodEnum,
        Combination: 'Combination' as PaymentMethodEnum
    }
}
